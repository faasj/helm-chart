kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-postgres-config
  labels:
    app: {{ .Release.Name }}-postgres
data:
  POSTGRES_DB: {{ .Values.postgresql.db }}
  POSTGRES_USER: {{ .Values.postgresql.user }}
  POSTGRES_PASSWORD: {{ .Values.postgresql.password }}
---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-postgres-pv-volume
  labels:
    type: local
    app: {{ .Release.Name }}-postgres
spec:
  storageClassName: manual
  capacity:
    storage: {{ .Values.postgresql.persistent.storage }}
  accessModes:
    - ReadWriteMany
  hostPath:
    path: {{ .Values.postgresql.persistent.path | quote }}
---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-postgres-pv-claim
  labels:
    app: {{ .Release.Name }}-postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.postgresql.persistent.storage }}
---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-postgres
spec:
  replicas: {{ .Values.postgresql.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgres
    spec:
      containers:
        - name: {{ .Release.Name }}-postgres
          {{- if .Values.postgresql.image.registry }}
          image: "{{ .Values.postgresql.image.registry }}/{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          {{- else }}
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy | quote }}
          ports:
            - containerPort: {{ .Values.postgresql.containerPort }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-postgres-config
          volumeMounts:
            - mountPath: {{ .Values.postgresql.mountPath | quote }}
              name: {{ .Values.postgresql.db }}
      volumes:
        - name: {{ .Values.postgresql.db }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-postgres-pv-claim
---

kind: Service
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-postgres
  labels:
    app: {{ .Release.Name }}-postgres
spec:
  type: NodePort
  ports:
    - port: {{ .Values.postgresql.containerPort }}
  selector:
    app: {{ .Release.Name }}-postgres
