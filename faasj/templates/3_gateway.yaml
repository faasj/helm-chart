kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-gateway
  labels:
    app: {{ .Release.Name }}-gateway
spec:
  replicas: {{ .Values.gateway.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-gateway
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-gateway
    spec:
      containers:
        - name: {{ .Release.Name }}-gateway
          image: "{{ .Values.gateway.image.registry }}/{{ .Values.gateway.image.repository }}:{{ .Values.gateway.image.tag }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: DATASOURCE_HOST
              value: {{ .Release.Name }}-postgres-svc
            - name: DEPLOY_SERVICE_NAME
              value: {{ .Release.Name }}-deployer
            - name: DEPLOY_SERVICE_PORT
              value: {{ .Values.deployer.service.port | quote }}
            - name: BUILD_SERVICE_NAME
              value: {{ .Release.Name }}-builder
            - name: BUILD_SERVICE_PORT
              value: {{ .Values.builder.service.port | quote }}

---

kind: Service
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-gateway
spec:
  type: ClusterIP
  ports:
    - name: http
      port: {{ .Values.gateway.service.port }}
      protocol: TCP
      targetPort: 8080
  selector:
    app: {{ .Release.Name }}-gateway
