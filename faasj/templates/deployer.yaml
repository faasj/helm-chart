kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: {{ .Values.namespace | default "default" }}
  name: {{ .Release.Name }}-deployer-cluster-role
rules:
  - apiGroups: {{ .Values.clusterrole.apiGroups }}
    resources: {{ .Values.clusterrole.resources }}
    verbs: {{ .Values.clusterrole.verbs }}
---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-deploy-cluster-role-binding
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-deployer-cluster-role
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: {{ .Values.serviceAccount.name }}
    namespace: {{ .Values.namespace | default "default" }}
    apiGroup: ""
---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-deployer
  labels:
    app: {{ .Release.Name }}-deployer
spec:
  replicas: {{ .Values.deployer.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-deployer
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-deployer
    spec:
      containers:
        - name: {{ .Release.Name }}-deployer
          image: "{{ .Values.deployer.image.registry }}/{{ .Values.deployer.image.repository }}:{{ .Values.deployer.image.tag }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: NAMESPACE
              value: {{ .Values.namespace | default "default" }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
---

kind: Service
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-deployer
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: {{ .Values.deployer.service.port }}
      protocol: TCP
      targetPort: 8080
  selector:
    app: {{ .Release.Name }}-deployer
